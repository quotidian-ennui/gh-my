#!/usr/bin/env bash

query_prs() {
  #shellcheck disable=SC2034
  local table_template='{{tablerow "Status" "Num" "Title" "Who" "URL" "When" -}}
  {{range(pluck "node" .data.search.edges) -}}
  {{ if index . "statusCheckRollup" -}}
    {{ $colour := "green" -}}
    {{ if ne .statusCheckRollup.state "SUCCESS" -}}
      {{ $colour = "red" -}}
    {{ end -}}
    {{tablerow (.statusCheckRollup.state | autocolor $colour) (printf "#%v" .number | autocolor "green") .title .author.login (.url | autocolor "cyan") (timeago .createdAt)  -}}
  {{ else -}}
    {{tablerow ("UNKNOWN" | autocolor "yellow") (printf "#%v" .number | autocolor "green") .title .author.login (.url | autocolor "cyan") (timeago .createdAt)  -}}
  {{ end -}}
  {{end -}}
  {{tablerender}}'
  local jq_filter='.data.search.edges[] | .node | { "number":.number, "title": .title, "login": .author.login, "statusRollup": .statusCheckRollup.state, "url": .url, "createdAt": .createdAt}'

  # shellcheck disable=SC2016
  local query='
query ($endCursor: String) {
  search(query: "is:closed is:pr user:@me archived:false", type: ISSUE, after: $endCursor, first: 50) {
    edges {
      node {
        ... on PullRequest {
          number
          title
          author {
            login
          }
          createdAt
          url
          repository {
            nameWithOwner
            name
          }
          statusCheckRollup {
            state
          }
        }
      }
    }
    pageInfo {
      hasNextPage
      endCursor
    }
  }
}'

  while getopts 'j' flag; do
    case "${flag}" in
    j) output_format="json" ;;
    *) query_help ;;
    esac
  done
  case $output_format in
  json)
    gh api graphql --paginate --raw-field query="$(helper::compressQuery "$query")" --jq "$jq_filter" | jq -c "."
    ;;
  *)
    gh api graphql --paginate --raw-field query="$(helper::compressQuery "$query")" --template "$table_template"
    ;;
  esac
}
