#!/usr/bin/env bash

query_help() {
  cat <<EOF

Usage: gh my [$ACTION_LIST] [options]
  issues      : list issues in your personal repositories
  prs         : list PRs in your persional repositories
  reviews     : list PRs where you've been asked for a review
  workload    : list PRs and issues where you are the assignee
  deployments : list deployments awaiting action on the default branch
  report      : show all the issues & prs you've been involved in the last 14 days
                (because you have to tell people what you've done)
  notifs      : list unread notifications
  failures    : show workflow failures in your personal repositories in the last 14 days
  vulns       : show vulnerability alerts from dependabot in your personal repositories

'issues' can have its output in JSON format
'prs' can have its output in JSON format
'reviews' can have its output in JSON format
'workload' can have its output in JSON format
  -j : output each row as a JSON object.
       This is useful if you want to script & pipe the output.
       (--jsonlines is also accepted)

'deployments' needs more filters
  -o : the organisation (e.g. -o my-company)
  -t : the topic  (e.g. -t my-terraform-repos)
  -r : a specific repository, but why not use gh run list instead?

'report' uses 'date' so any gnu date string is valid
  -d : the date string (default is "14 days ago")
  -q : omit the table headers
  -a : use 'author' instead of 'involves'
  -v : everything involving your user (e.g. where you're a CODEOWNER)

'failures' uses 'date' so any gnu date string is valid
  -d : the date string (default is "14 days ago")

'notifs' can also mark them as read
  -n : the ID to mark as read (-n 7235590448)
  -a : Mark all notifications as read

'vulns' can have more filters
  -o : the owner (e.g. -o my-company | -o my-user)
       default is whatever 'gh config get user -h github.com' returns
       ** Viewing security alerts implies permissions
EOF
  exit 1
}
